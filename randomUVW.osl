



shader randomUVW

(

    output color Col = 1,

    float Object_ID = 0,

    //rotate

    float Rotate = 0,

    float Rotate_Step = 0,

    float Rotate_Varience = 0,

    //scale

    vector Scale = 1,

    float Uniform_Scale = 1,

    vector Scale_Varience = 0,

    float Uniform_Scale_Varience = 0,

    

    //offset

    vector Offset = 0,

    vector Offset_Varience = 0,    

    

    //extra

    int Mirror = 0,

    float Seed = 1

    

)

{

    float myU = u - 0.5;

    float myV = v - 0.5;

    

    //scale

    float Srandf = cos(Object_ID*Uniform_Scale_Varience*354+Seed)*Uniform_Scale_Varience;

    float SrandfU = cos(Object_ID*Scale_Varience[0]*144+Seed)*Scale_Varience[0];

    float SrandfV = cos(Object_ID*Scale_Varience[1]*475+Seed)*Scale_Varience[1];

    

    myU -= myU * (SrandfU + Srandf + Scale[0] + Uniform_Scale - 2);

    myV -= myV * (SrandfV + Srandf + Scale[1] + Uniform_Scale - 2);

    

    //rotate

    int Rrandi = floor(Object_ID*360/Rotate_Step * Seed);

    float Rrandf = cos(Object_ID*Rotate_Varience*454)*Rotate_Varience;



    float final_rotate = radians(Rotate_Step * Rrandi + Rrandf + Rotate);

    float u1 = cos(final_rotate) * myU - sin(final_rotate) * myV;

    float v1 = sin(final_rotate) * myU + cos(final_rotate) * myV;

    myU = u1 + 0.5;

    myV = v1 + 0.5;

    

    //offset

    float PrandfU = cos(Object_ID*Offset_Varience[0]*157+Seed)*Offset_Varience[0];

    float PrandfV = cos(Object_ID*Offset_Varience[1]*452+Seed)*Offset_Varience[1];   

    myU += (PrandfU + Offset[0]) * 0.1;

    myV += (PrandfV + Offset[1]) * 0.1;



    //repeat

    if(Mirror == 0)

    {

        myU = mod(myU,1.0);

        myV = mod(myV,1.0);

    }

    else

    {

        int tempU = floor(myU);

        int tempV = floor(myV);

        if(tempU%2 == 0) myU = mod(myU,1.0);

        else myU = 1.0 - mod(myU,1.0);

        

        if(tempV%2 == 0) myV = mod(myV,1.0);

        else myV = 1.0 - mod(myV,1.0);

        

    }

    Col = color(myU,myV, 0);



}